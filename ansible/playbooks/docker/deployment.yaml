- name: Deployment of containers on server
  hosts: all
  become: false
  tasks:
    - name: Run postgres
      community.docker.docker_container:
        name: postgres
        image: postgres:15.1-alpine
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: "common_db"
          POSTGRES_USER: "user"
          POSTGRES_PASSWORD: "password"
          PGDATA: "/var/lib/postgresql/data"
        volumes:
          - "/home/data:/var/lib/postgresql/data"

    - name: Run redis
      community.docker.docker_container:
        name: redis
        image: redis
        state: started
        pull: true
        ports:
          - "6379:6379"

    - name: Run pgadmin
      community.docker.docker_container:
        name: pgadmin
        image: dpage/pgadmin4:6.19
        state: started
        ports:
          - "5050:80"
        env:
          PGADMIN_DEFAULT_EMAIL: "main@mail.ru"
          PGADMIN_DEFAULT_PASSWORD: "password"

    - name: Run zookeeper service
        community.docker.docker_container:
          name: zookeeper
          image: zookeeper
          state: started
          pull: true
          ports:
            - "2181:2181"

    - name: Run kafka service
        community.docker.docker_container:
          name: kafka
          image: wurstmeister/kafka
          state: started
          pull: true
          ports:
            - "9092:9092"
          env:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://51.250.102.12:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_BROKER_ID: 1
            KAFKA_LOG_DIRS: /var/lib/kafka/data

    - name: Run kafka-ui service
        community.docker.docker_container:
          name: kafka-ui
          image: provectuslabs/kafka-ui
          state: started
          pull: true
          ports:
            - "8086:8080"
          env:
            KAFKA_CLUSTERS_0_NAME: my-kafka-cluster
            KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9093"
            KAFKA_CLUSTERS_0_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CLUSTERS_0_SECURITY_PROTOCOL: PLAINTEXT

    - name: Run config server
      community.docker.docker_container:
        name: config-server
        image: splendidpdf/config-server:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "8888:8888"

    - name: Run user service
      community.docker.docker_container:
        name: user-service
        image: splendidpdf/user-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "8080:8080"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run order service
      community.docker.docker_container:
        name: order-service
        image: splendidpdf/order-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "8081:8081"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run product service
      community.docker.docker_container:
        name: product-service
        image: splendidpdf/product-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "9090:9090"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run seller service
      community.docker.docker_container:
        name: seller-info-service
        image: splendidpdf/seller-info-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "8085:8085"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run review service
      community.docker.docker_container:
        name: review-service
        image: splendidpdf/review-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "8082:8082"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run upload service
      community.docker.docker_container:
        name: upload-service
        image: splendidpdf/upload-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "9001:9001"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run auth service
      community.docker.docker_container:
        name: authorization-service
        image: splendidpdf/authorization-server:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "9000:9000"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"

    - name: Run api gateway service
      community.docker.docker_container:
        name: api-gateway-service
        image: splendidpdf/api-gateway-service:0.0.1-SNAPSHOT
        state: started
        pull: true
        ports:
          - "7777:7777"
        env:
          SPRING_CONFIG_IMPORT: "configserver:http://51.250.102.12:8888"
          SPRING_CLOUD_CONFIG_LABEL: "develop"